<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAIAAeHgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAds0lEQVRoQz2ad1hU
        5/b9QXrvRVGRJkjvHRRbLFERJVHEXrF3pUgT6b33jsCAvSUxRVNN9aaXm9wk3kQTY+8C8vnu4f6e3x/n
        OTPnnGHe9e61115rHlR2qpuRouVIlo4rOdoTyVRzJFPViRw1ea/uyBH1CaSr2pI3ypFC9YnyjAO58kyO
        qoM8K/fUxpOmbkuqlgOJWnYkaduToeNEup4HqbreJGl5kqjrxQF9L/bqubNPy5X9mq4c0HIjSdeTVLme
        oedJpror2aNcKVH3oETOxaouFKg4kyLfuU/LmX3aLmzRc2HX2CByIxaz0taH2ca2CpVkg3HkmXpRZhFE
        tYU/5SZ+VBgHUGsaQo2ZH5UmXpQYelBr5EudsR9lJp5UGfpSY+RPlbkftaMDabafTLfny5yJjOPy3E38
        69V9/GtZGl/EZ3JlSSofLD3E5VeTuBizhwuzt3J66gaOR66hP3wViqBl9PjE0uMyn27bWRy1mkqvZdTI
        0W0VRbvdS3S4zUfh/yotga/QNm0VJ5btI8l7JqtsPBQqaUYTKDL3pdoqlHrrYGrMg0YW32QeQZNlMA0C
        qsrUj1bzEFrMggWQDw3GQTSZhtJoHUrr+Ah6XWdzIXw5Xy49yI1dpQwc6WKw4CTPi87yqPAUD/JPcCdb
        wd9pbfy+p4YfE4r5cnU2n8Wnc2VxIu/P2cH7kzdx2XclF50W844clxwX8ZbTIi75reDK1K18E5PMx4sS
        +Sg+lc+3FVASEM2O0X4KlSQdG/IMPCiTXa+U3S/T86Fcx5davUDqZKdrDb2p1Pem1SiIFsNASrXdqdPx
        o0E/UKoQQI2pPy3jJnPSK5ZvZZfvHqyHinNQfwlaPoC2D+X8vrx/h+Hy8zzO7uOf5Dau7a7lly2l/LAm
        h29iU/l29n6+itjG595r+cpzDV+5r+IL1+V8H7qVP+al8nhtOTfXlPDfjWXy2WoavaJJNJAKJGqPIVff
        nTJZjBJAub4vlbp+1OkFUW8gAISjlTqeNOsH0KwXQLmWO426ytdSKX15XsdjhFItY6L4aGoC19fnM5x5
        VCpwioGK1xmShb+QY6jmTQbLzvMop5/bqZ3cONDEH7truLa5lGsr8/gj9jDXX07j+owU/p6SyI3wvfwW
        tI0bUQe4F32EobXVPFxTwZ0NFdzaXiO0iiZNRwAcHAEgFRAAFf8fgD/1ssA6eV0jDVih5UGjtt/IUSnN
        16oTQLue0EuAVmq4UaHpLmADeS9gBX8sSWd4fxODGT0MCIWGGgRA47tyvsxg7Zs8LT7DQ6nCndQubie2
        cnt3PXc2VXJ/ZTEPlxbyJLaYZ9H5PJ6TxZ3pKTyclcGzmAKG19byfFUVT9ZU8jChmp5J0WQqASTqjiPX
        QJpYKFJu7C8UkibW8adON5haWWC1thfl6rJADeG+HNWiIB0CoFvut+v5yzXlPXfapCpXvOL4KzoZdtQy
        fOgow8Xnof0KHP0Uuj+Dro8ZbrjEUNkFnuWe5GmGgqeJnTzb2czzTTUju8yqBlhWzYtXSnkencfgvHyG
        FpfIvToG4ysZiC/n6doKFC4CQNfzfwBy9D0pMQig1MCHEi0Bo+FNtYY/NZreVMniKlQnUT/Ki4ZRokCj
        JtKu5s1RdT86NH1oEslrGuVGp6Y/V6T5rk/bzfCaIoZ2NzN05IQs+D2G2z5iuFMW33mFocbLI9R6mneK
        J5kKniR28HhHE082VvNsTRVDK+sZiq9hcGkFA1KNFzFyLClnYGMDA6treLaqkkfryjnqPJ9UZQVS9G0p
        MPQR6QymStkH0sDVWkq6BNOobFYtb+pGedCq5kebmlRBbRLdo3zoG+VPr4aAkHsdap4oNAO5Mj6aP0K2
        8OJV4ezmWgZT+xiselsW/R4vpJmHOz9iqPk9Bmve4nnJeanCCZ6l9/J0fzvPtjXwfGMdQ+sF+LpGhlbL
        6+VVDC+tZHil/K0dbQxubuJZQj0Pt9TS6baQFF0BcNjIkUozkUXLybRaR9JmGkGncSQK02n0mkbSYxhK
        l1YQ/brhHNMNpUcAntYM4bxGGGe1QzkmlerXCOCUTjgf20Tzu+9GBuanyyKqGUwSipReZKD2MkOiSMoK
        0C7VaH6fF3WiSpVvMCx9Mpx1DJK6YW8X7Jbzrm6Gt3XyYkOTcL8REtrkfj9DB3t4drCLh0kddMlcSDX2
        Uahk6ttTIUOpURbeYhEmUhlKh34YvQZT6DWSs34IPZrBnNSN4JReOArh+jmNUF5XD+eCVjgn1ASAHCc1
        w3jffA7/nrSSxzOSGFxRzov9PQwWXxQFusyLFqnA0Y9hBIS8lkogIBA6UXAaMvsZTlHwIlHB8AEFAzs7
        uCc9cXtVBbc31PJgXyd39rdx82Ar1w+1Uu27kB36LgqVdF1bykUuG4xkkAmFWvSD6NILo99gMj2iNN3a
        ASg0AjmpFcYJ7RCOavkIgBAuqkfwmlThmNCpd5Q3x9SDuWQyk+8c47g3eS8DS4oZ3tXFcN7rDNco+0B6
        oOczXgiIF/+vErTI9dq3GCo5x6DQafBwP4Npx3ie2MO97U38vrKQv7bVcX1Xo8yMan7f38xvKa38kNpE
        nv98Vhs5K1RStWyoMPAekcEK0fgWGVC9RrLbxlOFOsJxJb9H+dGvGkCPijSt+JMzaoECIJxzakF0q7rR
        oepKj/TE2ybT+dbhVW6FbufpolyGt7RCugy16veFPp/zou8qAwJgoEsAdIsyjTT1JZ6UnuNhwQke5cri
        s09wT3b6943lfBGXwd28Y9yU45LYku8Tm/gpq5NPUms5FBbNq6PdpAI646gU9VECqNT2oEkktEsvhOP6
        kXRp+tIpAPoEwIlRQSNAmsVknVYP5A3Z/fMaymuedEkj96j784ZRFFcnxPB3QAJPY7IZ2tDIk929DBW9
        KRP5U4ZPfsOLY1d50SuLV1aiTRq68R2e1bzBQIMMutrXGSw5w5MjMq1lRvy4rZQHLXK/71Nulp3h59xe
        vszu4NP8VvZEzGeWpaNCJUN3vACQCuj7UyE2oV5Up01LaCMN2qnuTacsUAngpFowfcL1plEu8tqfC+oh
        nJXmVah5cVSeOaruyxlp8o9Gz+Ga5yoeL8iURq7j8bYuBrLPyUSWxUoFXvR/wXCfzIRuAdD+HgPNssDG
        txhou8Rgy1sMVp/jeelp7mb38MvBGu51XOL5mX/xvOcjPk5v4vz+Yi7lNrAtYi7TrEcASAVkDtTr+VKm
        NYlqGVpNIzofKLLpSbvsbq+qLyfUZbdF+xvEavepenNaKHNSZLVXnulUEykVEAp5f9Ewku+dYnkwN4Xh
        9SJ/u0U50k/wuPgCj5pkMZ0fSgU+AYX0Q/dHDHS8x+Pmt+XeRR43vs6zhvM8rT3H7aI+fkqq5kbFcW63
        XeRW+1s0rz5I7qIN9CbmkRAxm9m20sQZOmPFOigNmg9lmi7UqLnRLE3ZLTxvlcW3Ccd7hfvHRwUKXXxp
        VplIn4oXp5Sg5LmekcW706rqQaccZ0W1/uWwkLtzk6UHRAYPn+dFgXii6rcZlDnwQnZ/+PhVOKasxKcC
        5goD3R/wtF16oeUiTxsv8Lj2DLcKe/l3cg3fpzfyRWo97+4t5VD4YjZ6TSNj3nLW+UcR6yxuNFNrDNU6
        7jQIgAqNSTSoe9IhO90nWt8uu9qu4oZCAByTJu4TAB0yeY/L+fSoAAGgVCCvEZq1qXrRJZU7axzB1Umv
        cHdhhqhQO8O5okJlb4Fo/7CS/yeu8rzvE+4LZe63vs3D9nd40i1V6HiHR81v8FAW/7jqNPeL+7lxuI0f
        DtXz4c4iTi9LYo/LNOKsPNnoGsYq50CWOwmALA1r2X0PWmTqjvgcMWz9wuUzepOFRj4ju3pMxZfjKgEi
        mf4C7H8yekE9jJNCsz41X6mWL13yWqEbxhs2c/g6cC33lheKqTvK0OGTvCi/+L8h9toPDJ76gtutb/Kt
        NOM3R1r5ubCbf5oucK/lDe7Vn+dmkXL4nRTrfRYq5X1eL9/sq+KtJUlkOExjle5E4mT4xltOYrlShXI0
        x9Ck5yXDS1KYNPFRyQGnDCK5YDSNHi1RJGnSE6rCd9UgGVqB9Gv5SvOGclYA9KuJtEo1esRG9Mvgu2Az
        Vwzdcn6dvY9HYiWG048xmH+WgWpRGOH+8Nmvedj7Iddklz9JaxBFEQClvdxsfo0/hOvXS/p5WHGKZ4XH
        GZIQRNFpnom8/p3Sxpersjn70lbK3F5mk4Ezqw0dWW5kr1DJ1RorXl92WvS/VipxVGz0yREA0+nRFgCi
        RCeELidHBXNcdrlXDN5JjWBpahlqok5HZff79EK5MOZlrniu4Mfpu7gVn83zA0KfAqX6iLqIXA71yiA7
        +yX3et7jNwHwuXLxVcf4q/V17ndf5peCbv6T1c7j8tM8ze3nWabY8fQeXsiEfnSwnf+sLeT7ZUd4Y1oC
        2WOC2WnozDodycQ52uOkAj5ijSUTawvnZfL26YRxWi9K5oCfKIwXx1VlEquF0K8uOUCavFc0v0d2v0XJ
        f7HYp0wn86FrHP+esXtk8YM7a6R5Ff+zCme/gTNfyvlfQqGvedD/ITfaL/JzwykenhFr8Zbcf+Nr/p3X
        JYNKLEP+MR7J4h8ebOPu1loGZCI/2VzPn6uKuLm6mJ8WpXA2aCl5Vv7s0bKTHpAKKENLowywMk03atW9
        xHmK01SXvCsLbFN1F9Xx5ZjQR6F0pGKtlbt+VMC0SnW6BfiF8XP4Knwzf8dl82xXvSQyMWTFpxlufFtU
        R5TmuCjP6S/gwlfcO3qZ36pP8nl+C9c7XuPh8fd51Pcen+wv44ONR/jzUAsPJNE9Tung1pYqnm+pZyCh
        jnvry7m3uoSb8bn88koKLQ5TJZE5Ka3EaAkxnlRLOCmRtFWu6UmdNG+b0KZFZLR9BID3iIT2iM53i2x2
        ylnp/7t1gzgvi/8kcA2/x6Rxd1M5z+WLh4tPSQa+yIvWSwy0ixPtEf4fF+0//RmPRHVuVJ3iu4I2fq1U
        8Et5D19mNdC9aCvtM9fw3ooU/jxQx33xPDe2lPNEqvBcEtg9ycMP18hkXlPMnVV5KCbOIkdHvNB+TXPy
        jSR1mQRTLOG9VPJtlaSyRpHSVg2RRpHVftH9LhV3AeDJOVm0klYd4pPOmk/l68jN3IjP4cG2Wm7trOXu
        oXaGKs+J8/yQoe4PRdMvCIhLDHdLsBe5pF3iZcvbPGm+wM85LbyZkE719GXsnhDIdmsvCtyn89naDP5O
        rOe37bLgXTUiCBX8uSSTB+tLeLC2hBuL0+m1m06+llRgn64l+eZ+lJqHkSNeKFeGWpGca0XTGyRpdah7
        iBMV+oj69Gh6CY08UEi4P28zk6t+q/hjcSoPtlYxkNIlAeU4A1UXGO54V1yneP6u9xlqldfKc8dlntW/
        xpMKycRlJ7lXeZzfslv4eGcefTGbSXIKY72xI1vNnembtYavNmbz2+4KHiU383RPHX8vk4y8qoA7y/P4
        e1E6Cttp5KuLldhjYE3+6CDKrCeTp+dNkZEPVZKN2wxDaJZ42aYhFkEaWxlkurWF8wLigs0MPg9YyfVF
        svjNEveUtMkT2au9KDssuyy+ZVB2fVAsAs2SBdpk8Y1vcLf0GPcK+7gvNuG+APirsIsfkip5Z2USBd6z
        2GzuwjLd0RR6zeT8wu38tKOEO1KJx3tqub0ih/sC4F58Hv/EZtI/YToFmlKBXcY25I8Locp2OuWWYbTa
        TqXfcTbnnebTaybvxdwps3CLVKJTVyTTLJxPfZdzPeYQg3saROuPglKzyy+Iv78kwV2o0vme7PYbPBMq
        UXZO5sB5HlSe4npeJ3eLFTyuPMnzpvM8qj3FX7ntfL01j86pK0h2CGGJoQ3bRkv2DlzI1Q1HuLalkNub
        i3mwOp+BdWU8l0a+s+QIJ2SNpboyyLbrW5Nt6UupVRgFBkIlmQl1JqL/NpNpMJTprOtNrQSdLqsIzsiH
        3g1cxq/RB3mYUCZq0yNWQZJUkUzOsrMMNrzOQIsMLeXR/Kb0wvkROR2qOMd9adz/5LTyT5mCOxWi/8Xd
        /F10lH9yRG2SG/l0XQY90Rs4MmUumUGzaZi5gqvb8vlxvSjTqiM8XpHH4OpSnq0s5taSLBR2M8gdqYC+
        DYXW/lRZhVOo7yf896RM34s66yCKDL3Il6PEKpgmu6mcCXiFLxfu4damIoaSJacWHOfe4Q6JeJKekur5
        Nb2ZXw+38ltWK//N7eJ21lGJhxLYZbL+N7+Td3Zm81lyGZ8llXF562E+2ZHLz3tKeSxB5T97ynlnUyq1
        S1ZzZFoMZbOW8faGND6M3cd38/Zye8Ehni3J52lcAX+9mknXhGlkaUoPJJnY0zBBgvyEGVSbhI/8Llpt
        KT0xNpB0M08S5Ui1CSLPIZLu8CX8KGV9kCwuM7cPCk/w7Y4iXlu6n96XE+hfsJXjMds5vng7J+L28sna
        w7C9gbsZ7Xy0O5/cabGUz1tJ2ex4soLmUhv+ChfnbuHWukJ+2VXKpW0ZVLyygn0RszgYNoeG6PUowuK5
        5BvPv/02cH9WKg8XZfO7CEerbGialgBI1J9AmYkX9abBVEouLjcMIM/QgyRDe+K1RxOjacVSHRtW6I9n
        5xgvSgPm8fXOQh7l98rA6aT7pbUkOkawYbQX+8YFk2IbRrJtCFtshccBc3km2v1m9E5Z8MtEWzoSJ9dX
        T/BmnZUbaeND6PWN5dqiQxydtpIDPmKRxzkw29KWBdZOJDiIvXGZzVuTYvlu4jL+jtjDnQUZXI8/Qsek
        WWQYuypUUnTtKNFzpUb5k6IAKJJgk6HjzHad0USpGRCpY8aGse6stHBiiak90WZ2tMdu5puD5fyV3ECh
        3zwW6dkSMcqEDWZupIggpAuIHTZuVIuaPF5WQKN/DHEWznip6koMtCN+vAebBXCRQxTn/OP4/eVEkidG
        Ms3QmhANXaaZ2hBjM4n1dv4c9YvlauA6fpu0mn/Chb7z0vhvfBbNbrNIMRUAGXpOksgkShopf0YPJ1/X
        h0M6Tmw3HIOHhg6TxzrSEbuFwimxrHDwZYzKKJa7BdESs4lf91eR6TOLWfpj8dYwIs13FsfnJfBm7G4u
        ztvG1QX7eBKXT7G7pCej8UxU0yHeJ5SMGYuojnyFy3O28Ut0MjcXprNMADtoaDHFyIz1vmGkzVhMyZzl
        fBOfxtNXc3gevp/HMw7xjwBQ+qGKiVHsVLrRDG1HSrWcqZEZUGsxWegUTJrBJNbpmuGoocnUSZ68vT+f
        /k1J7J46H1N1NWaPcyZPAH2zo5Bkz+lMFelz0zclK3Ih55fu4d0VSXwRl8yvS9Lly/ModJ/FDJPxOGjq
        smtuDB0JB3h9rTyz+CA/zznAnzMPsNDKhTFa2kwxt+Tg7IXUrd1J55q9/LqpgKH4Il5EpTA49zD3Y7LE
        C6VR5hzFZiMxcxmaDpRoOFGl/JncNIxyaeJ0Y1eW6xkzQUODIAdn2tfupTwugTXhM7DQ0WbuOBdyImL4
        eGMWe1wjCdW3wlbPgK0ekdRMWULL1GVcmLqWL6dv586cQ+RIkppqOg5bbV02z5pP9eptdC6SSk3dwNXQ
        TfwnfAdzzZ2wEACRltZsnzGX/Lh1lMWu44OFu/nrpYM8C9nH4OzMEQA/SgWKnCazUQkgU9OeMm1nKiVW
        FsikLTHwJ00AxBmbYCcVGKdrSPR4VyKs7PA0tcbeyIS17qHUvLSCS6tS2OoUMkIfPRUVglXl2VEWLFaz
        5ICGA50Wkfziu5HU8aFEGI9hrLYOL0lF490CWWroQIFFMOfsFvCdPDNL1NBcW5swKytmOrmwYJI3r9h7
        kWMVyOvWL3HTcTWPJyfyz8upfD57F7n2oawzkDyQpe1AtYH0gJi4UpkDtRbh5Fj7sNzMHHtNLazVtIjU
        tcBD2wBHbT0c9Y3Z5BVJ9Yx4TizYwkaHAHyFbibq6kzVtmS5qNpqUbBCCR1nHefzo8caEkcHEKxngZWa
        Ov4mVsw2Hc9ijTEjw/Md16X8HrFbKjARIzU13AVEiJk1UebjmKZnSbndZD5zX8Z9j808mZLE7blpfCeD
        tMRFKGQmgyxLx546caPNpoFUGgfSNHoKBWMCWGlqMQLARl2HOXqjCdUyxl1DDzstXVZN9CcvaD5NYa+y
        fKwHPrqmjJYGXCwqtXu0N3tFYeokv56fGM2nE2LZYeJOgLYpY9U0mSIKs8zSmW1GLnQ5zOEz/3Vci9rH
        y9IDpgLAT1OH6HFOrHX2Z9vEQE4ELeHf4Vt4ELCdx5EHuTkziW/m7RsBsM1C7HSmti31xt60m4dQZxZM
        85gomcwBrDEwFwpp4SLNuc8+kHUWrszUsRYVUhnZwe3j/SlwjCLaxA4PTUPs1bTZNt6XsknTKbKPpNl+
        Ooox00d+HFijOQF/DWNcdY1I8JBZExJNh8cCPgndwC+Td/FTxE7mWjsLXXWJMRNvNjWa86v38+2uIn6O
        S+PPWfu4G7qDu2G7uSbPXpmyiXy7MDabyiA7pG1DtVSg0ThA5oEH1TLQ8ky9STCwYpKGNl66JqLtfiRJ
        VVaZOuOpLjqta8Vq04lki+YvNLLFV9MIt1F6rDNzJnWMPykW3uSY+VIjQ7FfO5Q16uMJVTPCV8OA7fb+
        VLq/RKfjLD7yXcEPYVv4PnI78yydcJTdXy6KVjt5Ee+LQ722s4y/Vudwe2Eqd6P2cnfKPq5N2c3HUQkU
        CYAdxgLgoNjXSlOlgQskV3siRRJqjkhPKE2er7o2QVqi75ae5Ain91h4MU3LjMmym7G6NmSJh4qRGRCg
        boCHqjYLdKxYqT9OLLEN6yWqpmo60qXhzzo1G6JGGcqwM2CnpRtl48JoEe/1lnMMX/iv4cuIzSw2d5Dv
        02WrTPz20Bg+jTvIja2l3Fqdx53YdG7N3Mc/0/bxa9SuEQDFMsV36osK7ZbpV2EdSL1lKEdkgGVry4iX
        SbxT15pwoUWU7Fqqoei+uT+HTL2I0xkj16UvpCeyLH2I1bImUEUbZ6GWt4oqvnK4yetQOa9SNaZZ0tt6
        VSvmqOjzsoohu7TtyNWT6KrtzvEx07js+gqfhKxjpUz4mer6MoMc6fFfwMcLd3JtXZ6kvUz+iknmxkt7
        +GP6Hn6cuoMPJ2+kSGi+U32sQmWboRlFkvArLEPI0HekwMRXKCTT2MiODWIfEiwnccTUnRLzALJNvNki
        PRNnMJb1Zg7kibpsMnbiFcNxxJiMI9ZyAtHm45luIFJqPJZdRk40SBA6qOfMRr0JbNQZR5ruRAq1J8ns
        ceaoZTgXJ8XwuSyoIyqOhsgYzkkO+GqxcH1dNn9uLOSmUOifuAxuCojf5x7gq2nbeTtkFWUSwpJ1ZBIn
        GBiRK3mg2DKYZAN70WZ/Sq2Dybd05/C4QDLHBpFj7km5RQClZv6kG7lywMqDlLG+lEgZkyTH7pL3e218
        2CPma7OdL8usJrJtrDeZ0jf1Qs0j0lMpZu5kmLpRLPQs15GzxkTaLEI45zKPjyPX8e787VwRC/JjzA7+
        XpvFrYRCfl+bw58rD3Nd2ciLk/lu7h4+kgY+77eUKqF0loGLQmWTrt5IoMkXz7/XYDy5Zj5UWodSNy6I
        yrFhFAnSLHN3KqxkMaPl+lhREWmgModwKsWFFshzuWK9CyaEki/Slukcye5xvmTJ/TL7ydSPkaBk4UeB
        fEe9jaicVLLB0JtSnUk0y3cenziLS4FxvB2xks/mbOGflSncWZPFdVn4N0uS+DE2kZ9i9vPd/N18MCOB
        10JXcMJDrIZNKMWmnkIhqYCSy0dkh3dIuEnXdyXfQPkPHu4U6nmSredOqrGz8NaVEgn8ZQYeYrfdyDJ2
        47Dsapq+C2l6LvLegwwLH5JEgbYbu5Bk4kGmXMuWz2XqOsvZhSrlP41Ij1UKffLUHSQ8OVNh4EmjWRDN
        0oNdNhGcnDCZ0w4z6bN/iQbbKNol4naOn0r7+Ciqx0ZSbh1GtXmwiI07ucrfhXYYGSsyLbzl8FNs0x2t
        SJaLR7RcFcqfLHLVnBWZ6s6KZAMnRaakn1w1J0WRprNCmYRStewVybqOikQ1W0Wymp0iQ8tZkaLvqtiv
        76LYqmuv2Cd/J1GeS1GzV6So2418pkzLRVEpf6NUxVFxRNVWkaViqziiYqfIV3VSFKu5KErlXplcr5Tv
        LZL3afI+R17nyxpyNV3kO+WarC1Xy02Roy7rVLfb9X95bjLXEJY3OgAAAABJRU5ErkJggg==
</value>
  </data>
</root>